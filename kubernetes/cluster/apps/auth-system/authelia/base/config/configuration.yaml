---
theme: dark

server:
  address: tcp://0.0.0.0:9091
  disable_healthcheck: false

log:
  level: debug

totp:
  disable: false

webauthn:
  disable: true
  display_name: Authelia
  attestation_conveyance_preference: none
  user_verification: preferred
  timeout: 30s

authentication_backend:
  password_reset:
    disable: false
  refresh_interval: 1m
  ldap:
    implementation: custom
    address: ldap://lldap.auth-system.svc.cluster.local:389
    timeout: 5s
    start_tls: false
    additional_users_dn: ou=people
    users_filter: "(&({username_attribute}={input})(objectClass=person))"
    additional_groups_dn: ou=groups
    groups_filter: "(member={dn})"
    group_search_mode: filter
    attributes:
      username: uid
      display_name: displayName
      mail: mail
      group_name: cn
      member_of: memberOf

duo_api:
  disable: false
  enable_self_enrollment: true

access_control:
  default_policy: deny
  networks:
    - name: internal
      networks:
        - 10.0.0.0/8
  rules:
    - domain: "money.${SECRET_DOMAIN_0}"
      policy: two_factor
      subject:
        - "group:actual_user"

    - domain: "ldap.${SECRET_DOMAIN_0}"
      policy: two_factor
      subject:
        - "group:lldap_user"
        - "group:lldap_admin"

    - domain: "webmail.${SECRET_DOMAIN_0}"
      policy: two_factor
      subject:
        - "group:webmail_user"

    - domain: "minio.${SECRET_DOMAIN_0}"
      policy: two_factor
      subject:
        - "group:minio_readonly"
        - "group:minio_user"
        - "group:minio_admin"

    - domain: "unleash.${SECRET_DOMAIN_0}"
      policy: two_factor
      subject:
        - "group:unleash_user"

    - domain: "hubble.${SECRET_DOMAIN_0}"
      policy: two_factor
      subject:
        - "group:hubble_user"

    - domain: "homepage.${SECRET_DOMAIN_0}"
      policy: one_factor

    - domain:
        - auth.${SECRET_DOMAIN_0}
        - speedtest.${SECRET_DOMAIN_0}
        - autoconfig.${SECRET_DOMAIN_0}
        - autodiscover.${SECRET_DOMAIN_0}
        - echo-server.${SECRET_DOMAIN_0}
      policy: bypass

    - domain: "*.${SECRET_DOMAIN_0}"
      policy: bypass
      methods:
        - OPTIONS

session:
  name: authelia_session
  expiration: 1h
  inactivity: 15m
  remember_me: 1M
  cookies:
    - domain: ${SECRET_DOMAIN_0}
      authelia_url: https://auth.${SECRET_DOMAIN_0}
      default_redirection_url: https://${SECRET_DOMAIN_0}

regulation:
  max_retries: 3
  find_time: 2m
  ban_time: 5m

notifier:
  disable_startup_check: false
  smtp:
    address: submission://mail.${SECRET_DOMAIN_0}:587
    username: admin@${SECRET_DOMAIN_0}
    sender: Authelia Admin <admin@${SECRET_DOMAIN_0}>

identity_providers:
  oidc:
    jwks:
      - algorithm: RS256
        # docker run --rm -u "$(id -u):$(id -g)" -v "$(pwd)":/keys authelia/authelia:latest authelia crypto pair rsa generate --directory /keys
        key: |-
          {{- env "OIDC_JWKS_KEY" | nindent 10 }}
    enable_client_debug_messages: true
    cors:
      endpoints: [authorization, token, revocation, introspection]
      allowed_origins_from_client_redirect_uris: true
    clients:
      - client_name: MinIO
        # docker run --rm authelia/authelia:latest authelia crypto rand --length 72 --charset rfc3986
        client_id: '{{ env "MINIO_OAUTH_CLIENT_ID" }}'
        # docker run authelia/authelia:latest authelia crypto hash generate pbkdf2 --variant sha512 --random --random.length 72 --random.charset rfc3986
        client_secret: '{{ env "MINIO_OAUTH_CLIENT_HASHED_SECRET" }}'
        public: false
        authorization_policy: two_factor
        pre_configured_consent_duration: 1y
        redirect_uris: ["https://minio.${SECRET_DOMAIN_0}/oauth_callback"]
        scopes: [openid, profile, email, groups]
        userinfo_signed_response_alg: none
        token_endpoint_auth_method: client_secret_post
